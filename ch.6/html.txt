1. 백엔드도 HTML을 알아야 하는 이유

- HTTP요청은 웹 브라우저를 통해 일ㅇ어나는데, HTML문서가 이 웹브라우저에 띄워져있기때문에, HTML문서로부터 요청이 날아온다고 말해도 됨.
웹 브라우저에서 보내는 방법과 백엔드 웹 애플리케이션에서의 받는 방법은 서로 동일해야 되기 때문에 (요청을 정상적으로 처리하기 위해) HTML에 대한 기본적인 이해가 필수적이다.

- api만 만들더라도 프런트엔드에서 어떤 형태로 사용될지 고려하여 설계해야됨
실제 서비스를 가정해 기존 api설계에 있던 모순을 찾아내기 위해서 필요함
하나의 서비스를 만들 수 있게 되기 때문이다.

- 서비스 내부 영역에 있는 api 서버와 시스템에도 개발자나 기획자들 혹은 모니터링을 하는 운영자들에게 제공할 프런트엔드 페이지가 필요하다.


2. html 구조
html태그에 사용되는 언어

1.form 태그와 input태그 

2. 주석
<!-- -->

<html lang="ko"></html> 한글로 작성된 페이지임을 나타냄
<html lnag="en-US></html>
웹 페이지의 언어와 사용자의 언어가 다른경우 웹 페이지의 번역기능을 사용할 수 있다.
기능으로 속성lang을 지정해야만 된다.

언어별로 문서를 따로 만들거나, 한 문서 내에서 JavaScript로 동적으로 변경할 수 있습니다.
-> 이는 코드로 확인할 수 있다. 

3.최상단의 html 태그
html태그가 문서의 최상단에 반드시 들어가고, html태그 안쪽에는 head태그와 body태그가 작성된다.
구조적으로 생략하지 않고 작성해주는 것이 좋다.

- head 태그 : 해당 문서를 설명해주는 내용이 들어있음 = 메타데이터 (어떤 데이터를 설명하느 데이터)
title 태그 : HTML의 문서의 제목표현
link태그로 CSS파일으 불어와 적용
meta태그로 캐리터셋이나 검색엔진에게 해당페이지를 크롤링하기 위한 여러 정보 제공 

1. name 속성
정의: input 태그의 데이터를 식별하는 이름.
역할: 서버로 전송된 데이터를 처리할 때, 서버는 name 속성값으로 데이터를 받음.
예시:
<input type="text" name="title"> → 서버에서 title이라는 키로 값 처리.

3. 독타입 
html 태그에 포함되지 않고 밖에 작성하는 태그 
해당 HTML의 문서가 어떤 버전으로 작성된 것인지를 명시하는 기능
: 버전을 써주지 않으면 가장 최신 버전사용 선언 하는 것과 일치


4. minify
파일에 줄바꿈이 전혀 되어있지 않거나, 띄어쓰기가 생략되어 있는 경우 : 파일 용량을 줄이기 위한것
네트워크 트래픽이 줄어들어 운영비용을 절감할 수 있음 


2. submit 버튼
특징: name 속성이 없으며, 서버로 전송되지 않음.
역할: form 태그 내부 데이터를 서버로 제출하는 동작 수행.
정리: submit은 form 태그의 동작을 완료하면 역할이 종료됨.

3. form 태그
역할: 데이터를 서버로 전송.
속성:
action: 데이터를 전송할 서버의 경로(URL).
예: action="./article"
주의: 경로가 없으면 요청 실패. 해당 경로를 처리할 컨트롤러 또는 파일이 필요.
method: HTTP 메서드 지정.
POST: 데이터를 본문(body)에 담아 전송. 주로 데이터 생성 시 사용.
GET: URL에 데이터를 쿼리 문자열로 첨부. 데이터 조회에 적합.
enctype: 데이터 인코딩 방식 (추후 학습 필요).

4. 컨트롤러 추가
문제: 위 예제에서 ./article 경로를 처리할 컨트롤러가 없으면 실행되지 않음.
해결 방법: ./article 요청을 처리할 컨트롤러 추가.
article 파일 생성 후 서버에서 처리.

5. 학습 전략
태그별 역할: 각 태그가 어떤 데이터를 처리하고, 어떤 상황에서 사용되는지 파악.
HTTP 메서드 구분:
POST: 데이터 생성/전송.
GET: 단순 링크나 데이터 조회.
데이터 전송 방식 이해: 요청 시 데이터가 서버에 어떻게 전달되고, 어떤 응답이 오는지 학습.

추가 참고 자료 -검색해보기 
HTML Form Input Types : 다양한 input 타입 확인.
HTML Forms Guide : 폼 태그 속성 및 사용법.

추가로 해야되는 공부 
enctype 사용법: 파일 업로드와 같은 특수 상황에서 필요.
API 문서 작성: 컨트롤러와 요청/응답 흐름에 대한 상세 문서화.
각 input 타입의 차이점: 데이터 전송 방식, 사용 사례별 적합성.


# Spring Boot 요청 흐름 설명
## 요청 처리 흐름 🌐

1. **클라이언트 요청**
   - 클라이언트(예: 웹 브라우저)가 URL을 통해 요청을 보냅니다.
   - 예: `http://localhost:8080/`

2. **내장 서버(Tomcat, Jetty 등)**  
   - Spring Boot 애플리케이션에 내장된 서버가 클라이언트의 요청을 가장 먼저 받습니다.  
   - 서버는 이 요청을 처리하기 위해 Spring의 **DispatcherServlet**에 전달합니다.

3. **DispatcherServlet**  
   - 요청 경로(예: `/`)를 기준으로 어떤 **컨트롤러와 메서드**가 이 요청을 처리해야 하는지 찾습니다.  
   - 예: `/` 경로에 매핑된 메서드가 있다면, 해당 메서드로 요청을 전달합니다.

4. **컨트롤러(SimpleRestController)**  
   - 요청을 처리하기 위해 지정된 컨트롤러의 메서드가 실행됩니다.  
   - 컨트롤러는 클라이언트가 요청한 데이터를 생성하거나, 가공한 후 반환합니다.
   - 예: `"Hello"`

5. **응답 반환**
   - 컨트롤러의 반환값은 DispatcherServlet을 통해 클라이언트로 전달됩니다.  
   - 클라이언트는 브라우저나 HTTP 클라이언트를 통해 이 응답을 받습니다.

---



1. **클라이언트**: 손님이 식당에서 "치킨 주세요!"라고 요청.
2. **서버**: 식당 종업원이 주문을 받고 주방에 전달.
3. **DispatcherServlet**: 종업원이 주방에서 적절한 요리사에게 주문을 연결.
4. **컨트롤러 메서드**: 요리사가 치킨을 만들어 종업원에게 전달.
5. **응답 반환**: 종업원이 손님에게 요리를 서빙.


##문제 1
스프링부트 애플리케이션에서 내장 서버로 사용하는 기본 서버는 무엇인가요?

Jetty
Tomcat
Undertow
Nginx

##문제 2
@RestController와 관련된 설명 중 올바른 것은?

클라이언트 요청을 받는 메소드를 작성할 수 있다.
스프링부트 애플리케이션의 실행 시작점을 표시한다.
데이터베이스 연결을 설정한다.
HTML 파일을 렌더링하는 데 사용된다.

##문제 3
컨트롤러 메서드가 클라이언트 요청을 처리한 후 반환하는 데이터는 어디로 전달되나요?

내장 서버에서 바로 응답.
DispatcherServlet에서 클라이언트로 응답.
데이터베이스로 저장.
클라이언트가 직접 컨트롤러 메서드 호출.

##문제 1
스프링부트에서 내장 서버의 역할은 무엇인가요?

애플리케이션을 실행하고 HTTP 요청을 받는다.
애플리케이션의 데이터베이스를 설정한다.
애플리케이션의 UI를 디자인한다.
애플리케이션에서 발생한 오류를 처리한다.

##문제 2
스프링부트에서 @GetMapping 어노테이션의 역할은 무엇인가요?

1.HTTP GET 요청을 처리하는 메서드를 정의한다.
2.HTTP POST 요청을 처리하는 메서드를 정의한다.
3.데이터베이스에서 데이터를 조회하는 메서드를 정의한다.
4.애플리케이션을 시작하는 메서드를 정의한다.

문제 3
스프링부트에서 @RestController 어노테이션은 무엇을 의미하나요?

HTTP 요청을 처리하는 메서드가 있는 클래스를 정의한다.
애플리케이션의 데이터베이스를 설정한다.
애플리케이션의 UI를 정의한다.
REST API 엔드포인트를 생성한다.
